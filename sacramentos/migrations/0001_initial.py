# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ciudades', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='AsignacionParroquia',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('es_activo', models.BooleanField(default=True, verbose_name=b'Est\xc3\xa1 activo?')),
            ],
            options={
                'ordering': ['persona__user__last_name', 'parroquia__nombre'],
                'get_latest_by': 'created',
                'verbose_name': 'Asignacion de Parroquia',
                'verbose_name_plural': 'Asignaciones de Parroquias',
                'permissions': (('add_asignarsecretaria', 'Puede asignar secretarias'), ('change_asignarsecretaria', 'Puede actualizar asignacion secretarias'), ('delete_asignarsecretaria', 'Puede eliminar asignacion secretarias'), ('add_asignarsacerdote', 'Puede asignar sacerdotes'), ('change_asignarsacerdote', 'Puede actualizar asignacion sacerdotes'), ('delete_asignarsacerdote', 'Puede eliminar asignacion sacerdotes')),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Configuracion',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('es_activo', models.BooleanField(default=True, verbose_name=b'Est\xc3\xa1 activo?')),
                ('diocesis', models.BooleanField(default=False)),
                ('iglesia', models.BooleanField(default=False)),
                ('libro_bautismo', models.BooleanField(default=False)),
                ('libro_eucaristia', models.BooleanField(default=False)),
                ('libro_confirmacion', models.BooleanField(default=False)),
                ('libro_matrimonio', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Iglesia',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('es_activo', models.BooleanField(default=True, verbose_name=b'Est\xc3\xa1 activo?')),
                ('nombre', models.CharField(max_length=100)),
                ('principal', models.BooleanField(default=False, verbose_name=b'Es la Iglesia Matriz?')),
            ],
            options={
                'ordering': ['nombre'],
                'get_latest_by': 'created',
                'verbose_name': 'Iglesia',
                'verbose_name_plural': 'Iglesias',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Intenciones',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('es_activo', models.BooleanField(default=True, verbose_name=b'Est\xc3\xa1 activo?')),
                ('intencion', models.TextField(help_text=b'Ingrese la intenci\xc3\xb3n. Ej: Aniversario de fallecimiento', max_length=500)),
                ('fecha', models.DateField(help_text=b'Ingrese la fecha de la intenci\xc3\xb3n Ej: dd/mm/yyyy')),
                ('hora', models.TimeField(help_text=b'Ingrese la hora de celebraci\xc3\xb3n de la intenci\xc3\xb3n Ej: 17:00')),
                ('oferente', models.CharField(help_text=b'Ingrese quien ofrece la intenci\xc3\xb3n. Ej: La Flia Flores', max_length=70)),
                ('ofrenda', models.DecimalField(help_text=b'Ingrese el valor de la ofrenda por la intenci\xc3\xb3n. Ej: 5', max_digits=7, decimal_places=2)),
                ('individual', models.BooleanField(help_text=b'Marque para indicar que la intenci\xc3\xb3n ser\xc3\xa1 la \xc3\xbanica en la misa', verbose_name=b'Es \xc3\xbanica?')),
                ('iglesia', models.ForeignKey(help_text=b'Escoja la iglesia en donde se celebrar\xc3\xa1 la intenci\xc3\xb3n', to='sacramentos.Iglesia')),
            ],
            options={
                'ordering': ['iglesia__principal', '-fecha', '-hora', 'iglesia__nombre', 'oferente'],
                'get_latest_by': 'created',
                'verbose_name': 'Intencion de Misa',
                'verbose_name_plural': 'Intenciones de Misa',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Libro',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('es_activo', models.BooleanField(default=True, verbose_name=b'Est\xc3\xa1 activo?')),
                ('nombre', models.CharField(help_text=b'Nombre del Libro', max_length=b'50', null=True, verbose_name='Nombre *', blank=True)),
                ('numero_libro', models.PositiveIntegerField()),
                ('tipo_libro', models.CharField(default=b'', help_text=b'Seleccione un tipo de libro Ej: Bautismo', max_length=200, verbose_name='Tipo de Libro *', choices=[(b'', b'-- Seleccione --'), (b'bautismo', b'Bautismo'), (b'eucaristia', b'Primera Comuni\xc3\xb3n'), (b'confirmacion', b'Confirmaci\xc3\xb3n'), (b'matrimonio', b'Matrimonio')])),
                ('fecha_apertura', models.DateField(help_text=b'Ingrese una fecha Ej:22/07/2010', verbose_name='Fecha apertura *')),
                ('fecha_cierre', models.DateField(help_text=b'Ingrese una fecha Ej:22/07/2010', null=True, blank=True)),
                ('principal', models.BooleanField(default=False, verbose_name='Es principal')),
                ('primera_pagina', models.PositiveIntegerField(verbose_name='Primera p\xe1gina *')),
                ('primera_acta', models.PositiveIntegerField(verbose_name='Primera acta *')),
            ],
            options={
                'ordering': ['principal', 'nombre', 'numero_libro', 'tipo_libro', '-fecha_apertura'],
                'get_latest_by': 'created',
                'verbose_name': 'Libro',
                'verbose_name_plural': 'Libros',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NotaMarginal',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('es_activo', models.BooleanField(default=True, verbose_name=b'Est\xc3\xa1 activo?')),
                ('fecha', models.DateField(help_text=b'Ingrese una fecha Ej: 16/09/2013')),
                ('descripcion', models.TextField(help_text=b'Ingrese una descripcion ej: Di copia para matrimonio', max_length=200, verbose_name=b'Descripci\xc3\xb3n *')),
            ],
            options={
                'ordering': ['-fecha'],
                'get_latest_by': 'created',
                'verbose_name': 'Nota Marginal',
                'verbose_name_plural': 'Notas Marginales',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ParametrizaDiocesis',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('es_activo', models.BooleanField(default=True, verbose_name=b'Est\xc3\xa1 activo?')),
                ('diocesis', models.CharField(help_text=b'Nombre de la Di\xc3\xb3cesis Ej:Di\xc3\xb3cesis de Loja', max_length=50, verbose_name=b'Nombre Di\xc3\xb3cesis *')),
                ('obispo', models.CharField(help_text=b'Ingrese el nombre del Obispo Ej: Julio Parrilla', max_length=50, verbose_name=b'Obispo *')),
                ('direccion', models.ForeignKey(related_name=b'direccion_diocesis', to='ciudades.Direccion')),
            ],
            options={
                'get_latest_by': 'created',
                'verbose_name': 'Par\xe1metro de la Di\xf3cesis',
                'verbose_name_plural': 'Par\xe1metros de la Di\xf3cesis',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ParametrizaParroquia',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('es_activo', models.BooleanField(default=True, verbose_name=b'Est\xc3\xa1 activo?')),
                ('numero_acta', models.PositiveIntegerField(help_text=b'Ingrese el numero de acta Ej: 1 - 17')),
                ('pagina', models.PositiveIntegerField(help_text=b'Ingrese el numero de la p\xc3\xa1gina Ej: 1 - 17')),
                ('libro', models.OneToOneField(null=True, blank=True, to='sacramentos.Libro')),
            ],
            options={
                'get_latest_by': 'created',
                'verbose_name': 'Par\xe1metro de la Parroquia',
                'verbose_name_plural': 'Par\xe1metros de la Parroquia',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Parroquia',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('es_activo', models.BooleanField(default=True, verbose_name=b'Est\xc3\xa1 activo?')),
                ('nombre', models.CharField(help_text=b'Ingrese el nombre de la parroquia Ej: El Cisne', max_length=50, verbose_name=b'Nombre de Parroquia *')),
                ('direccion', models.ForeignKey(related_name=b'direccion_parroquia', to='ciudades.Direccion')),
            ],
            options={
                'ordering': ['nombre'],
                'get_latest_by': 'created',
                'verbose_name': 'Parroquia',
                'verbose_name_plural': 'Parroquias',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PerfilUsuario',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('es_activo', models.BooleanField(default=True, verbose_name=b'Est\xc3\xa1 activo?')),
                ('nombres_completos', models.CharField(max_length=100)),
                ('dni', models.CharField(help_text=b'Ingrese un numero de cedula ej:1101980561', max_length=20, null=True, verbose_name=b'C\xc3\xa9dula/Pasaporte', blank=True)),
                ('nacionalidad', models.CharField(default=b'', help_text=b'Escoja la nacionalidad. Ej: Ecuador', max_length=2, choices=[(b'', b'-- Seleccione --'), (b'EC', b'Ecuador'), (b'AF', b'Afganist\xc3\xa1n'), (b'AL', b'Albania'), (b'DE', b'Alemania'), (b'AD', b'Andorra'), (b'AO', b'Angola'), (b'AI', b'Anguilla'), (b'AQ', b'Ant\xc3\xa1rtida'), (b'AG', b'Antigua y Barbuda'), (b'AN', b'Antillas Holandesas'), (b'SA', b'Arabia Saud\xc3\xad'), (b'DZ', b'Argelia'), (b'AR', b'Argentina'), (b'AM', b'Armenia'), (b'AW', b'Aruba'), (b'AU', b'Australia'), (b'AT', b'Austria'), (b'AZ', b'Azerbaiy\xc3\xa1n'), (b'BS', b'Bahamas'), (b'BH', b'Bahrein'), (b'BD', b'Bangladesh'), (b'BB', b'Barbados'), (b'BE', b'B\xc3\xa9lgica'), (b'BZ', b'Belice'), (b'BJ', b'Benin'), (b'BM', b'Bermudas'), (b'BY', b'Bielorrusia'), (b'MM', b'Birmania'), (b'BO', b'Bolivia'), (b'BA', b'Bosnia y Herzegovina'), (b'BW', b'Botswana'), (b'BR', b'Brasil'), (b'BN', b'Brunei'), (b'BG', b'Bulgaria'), (b'BF', b'Burkina Faso'), (b'BI', b'Burundi'), (b'BT', b'But\xc3\xa1n'), (b'CV', b'Cabo Verde'), (b'KH', b'Camboya'), (b'CM', b'Camer\xc3\xban'), (b'CA', b'Canad\xc3\xa1'), (b'TD', b'Chad'), (b'CL', b'Chile'), (b'CN', b'China'), (b'CY', b'Chipre'), (b'VA', b'Ciudad del Vaticano (Santa Sede)'), (b'CO', b'Colombia'), (b'KM', b'Comores'), (b'CG', b'Congo'), (b'CD', b'Congo, Rep\xc3\xbablica Democr\xc3\xa1tica del'), (b'KR', b'Corea'), (b'KP', b'Corea del Norte'), (b'CI', b'Costa de Marf\xc3\xadl'), (b'CR', b'Costa Rica'), (b'HR', b'Croacia (Hrvatska)'), (b'CU', b'Cuba'), (b'DK', b'Dinamarca'), (b'DJ', b'Djibouti'), (b'DM', b'Dominica'), (b'EG', b'Egipto'), (b'SV', b'El Salvador'), (b'AE', b'Emiratos \xc3\x81rabes Unidos'), (b'ER', b'Eritrea'), (b'SI', b'Eslovenia'), (b'ES', b'Espa\xc3\xb1a'), (b'GM', b'Gambia'), (b'GE', b'Georgia'), (b'GH', b'Ghana'), (b'GI', b'Gibraltar'), (b'GD', b'Granada'), (b'GR', b'Grecia'), (b'GL', b'Groenlandia'), (b'GP', b'Guadalupe'), (b'GU', b'Guam'), (b'GT', b'Guatemala'), (b'GY', b'Guayana'), (b'GF', b'Guayana Francesa'), (b'GN', b'Guinea'), (b'GQ', b'Guinea Ecuatorial'), (b'GW', b'Guinea-Bissau'), (b'HT', b'Hait\xc3\xad'), (b'HN', b'Honduras'), (b'HU', b'Hungr\xc3\xada'), (b'IN', b'India'), (b'ID', b'Indonesia'), (b'IQ', b'Irak'), (b'IR', b'Ir\xc3\xa1n'), (b'IE', b'Irlanda'), (b'BV', b'Isla Bouvet'), (b'CX', b'Isla de Christmas'), (b'IS', b'Islandia'), (b'KY', b'Islas Caim\xc3\xa1n'), (b'CK', b'Islas Cook'), (b'CC', b'Islas de Cocos o Keeling'), (b'FO', b'Islas Faroe'), (b'HM', b'Islas Heard y McDonald'), (b'FK', b'Islas Malvinas'), (b'MP', b'Islas Marianas del Norte'), (b'MH', b'Islas Marshall'), (b'UM', b'Islas menores de Estados Unidos'), (b'PW', b'Islas Palau'), (b'SB', b'Islas Salom\xc3\xb3n'), (b'SJ', b'Islas Svalbard y Jan Mayen'), (b'TK', b'Islas Tokelau'), (b'TC', b'Islas Turks y Caicos'), (b'VI', b'Islas V\xc3\xadrgenes (EE.UU.)'), (b'VG', b'Islas V\xc3\xadrgenes (Reino Unido)'), (b'WF', b'Islas Wallis y Futuna'), (b'IL', b'Israel'), (b'IT', b'Italia'), (b'JM', b'Jamaica'), (b'JP', b'Jap\xc3\xb3n'), (b'JO', b'Jordania'), (b'KZ', b'Kazajist\xc3\xa1n'), (b'KE', b'Kenia'), (b'KG', b'Kirguizist\xc3\xa1n'), (b'KI', b'Kiribati'), (b'KW', b'Kuwait'), (b'LA', b'Laos'), (b'LS', b'Lesotho'), (b'LV', b'Letonia'), (b'LB', b'L\xc3\xadbano'), (b'LR', b'Liberia'), (b'LY', b'Libia'), (b'LI', b'Liechtenstein'), (b'LT', b'Lituania'), (b'LU', b'Luxemburgo'), (b'MK', b'Macedonia'), (b'MG', b'Madagascar'), (b'MY', b'Malasia'), (b'MW', b'Malawi'), (b'MV', b'Maldivas'), (b'ML', b'Mal\xc3\xad'), (b'MT', b'Malta'), (b'MA', b'Marruecos'), (b'MQ', b'Martinica'), (b'MU', b'Mauricio'), (b'MR', b'Mauritania'), (b'YT', b'Mayotte'), (b'MX', b'M\xc3\xa9xico'), (b'FM', b'Micronesia'), (b'MD', b'Moldavia'), (b'MC', b'M\xc3\xb3naco'), (b'MN', b'Mongolia'), (b'MS', b'Montserrat'), (b'MZ', b'Mozambique'), (b'NA', b'Namibia'), (b'NR', b'Nauru'), (b'NP', b'Nepal'), (b'NI', b'Nicaragua'), (b'NE', b'N\xc3\xadger'), (b'NG', b'Nigeria'), (b'NU', b'Niue'), (b'NF', b'Norfolk'), (b'NO', b'Noruega'), (b'NC', b'Nueva Caledonia'), (b'NZ', b'Nueva Zelanda'), (b'OM', b'Om\xc3\xa1n'), (b'NL', b'Pa\xc3\xadses Bajos'), (b'PA', b'Panam\xc3\xa1'), (b'PG', b'Pap\xc3\xbaa Nueva Guinea'), (b'PK', b'Paquist\xc3\xa1n'), (b'PY', b'Paraguay'), (b'PE', b'Per\xc3\xba'), (b'PN', b'Pitcairn'), (b'PF', b'Polinesia Francesa'), (b'PL', b'Polonia'), (b'PT', b'Portugal'), (b'PR', b'Puerto Rico'), (b'QA', b'Qatar'), (b'UK', b'Reino Unido'), (b'CF', b'Rep\xc3\xbablica Centroafricana'), (b'CZ', b'Rep\xc3\xbablica Checa'), (b'ZA', b'Rep\xc3\xbablica de Sud\xc3\xa1frica'), (b'DO', b'Rep\xc3\xbablica Dominicana'), (b'SK', b'Rep\xc3\xbablica Eslovaca'), (b'RE', b'Reuni\xc3\xb3n'), (b'RW', b'Ruanda'), (b'RO', b'Rumania'), (b'RU', b'Rusia'), (b'EH', b'Sahara Occidental'), (b'KN', b'Saint Kitts y Nevis'), (b'WS', b'Samoa'), (b'AS', b'Samoa Americana'), (b'SM', b'San Marino'), (b'VC', b'San Vicente y Granadinas'), (b'SH', b'Santa Helena'), (b'LC', b'Santa Luc\xc3\xada'), (b'ST', b'Santo Tom\xc3\xa9 y Pr\xc3\xadncipe'), (b'SN', b'Senegal'), (b'SC', b'Seychelles'), (b'SL', b'Sierra Leona'), (b'SG', b'Singapur'), (b'SY', b'Siria'), (b'SO', b'Somalia'), (b'LK', b'Sri Lanka'), (b'PM', b'St. Pierre y Miquelon'), (b'SZ', b'Suazilandia'), (b'SD', b'Sud\xc3\xa1n'), (b'SE', b'Suecia'), (b'CH', b'Suiza'), (b'SR', b'Surinam'), (b'TH', b'Tailandia'), (b'TW', b'Taiw\xc3\xa1n'), (b'TZ', b'Tanzania'), (b'TJ', b'Tayikist\xc3\xa1n'), (b'TF', b'Territorios franceses del Sur'), (b'TP', b'Timor Oriental'), (b'TG', b'Togo'), (b'TO', b'Tonga'), (b'TT', b'Trinidad y Tobago'), (b'TN', b'T\xc3\xbanez'), (b'TM', b'Turkmenist\xc3\xa1n'), (b'TR', b'Turqu\xc3\xada'), (b'TV', b'Tuvalu'), (b'UA', b'Ucrania'), (b'UG', b'Uganda'), (b'UY', b'Uruguay'), (b'UZ', b'Uzbekist\xc3\xa1n'), (b'VU', b'Vanuatu'), (b'VE', b'Venezuela'), (b'VN', b'Vietnam'), (b'YE', b'Yemen'), (b'YU', b'Yugoslavia'), (b'ZM', b'Zambia'), (b'ZW', b'Zimbabue')])),
                ('fecha_nacimiento', models.DateField(help_text=b'Ingrese la fecha de nacimiento Ej: dd/mm/yyyy', null=True, blank=True)),
                ('lugar_nacimiento', models.CharField(help_text=b'Ingrese el lugar de Nacimiento. Ej: Amaluza', max_length=25, null=True, blank=True)),
                ('sexo', models.CharField(default=b'', help_text=b'Elija el sexo de la persona. Ej: Masculino', max_length=10, choices=[(b'', b'-- Seleccione --'), (b'm', b'Masculino'), (b'f', b'Femenino')])),
                ('estado_civil', models.CharField(default=b'', help_text=b'Elija el estado civil. Ej: Soltero/a', max_length=10, choices=[(b'', b'-- Seleccione --'), (b's', b'Soltero/a'), (b'c', b'Casado/a'), (b'd', b'Divorciado/a'), (b'v', b'Viudo/a')])),
                ('profesion', models.CharField(help_text=b'Ingrese la profesi\xc3\xb3n de la persona', max_length=40, null=True, blank=True)),
                ('celular', models.CharField(help_text=b'Ingrese su n\xc3\xbamero celular. Ej: 0986522754', max_length=10, null=True, blank=True)),
                ('madre', models.ForeignKey(related_name=b'+', blank=True, to='sacramentos.PerfilUsuario', help_text=b'Presione buscar, si no est\xc3\xa1 en la lista, presione crear', null=True)),
                ('padre', models.ForeignKey(related_name=b'+', blank=True, to='sacramentos.PerfilUsuario', help_text=b'Presione buscar, si no est\xc3\xa1 en la lista, presione crear', null=True)),
                ('parroquias', models.ManyToManyField(to='sacramentos.Parroquia', null=True, through='sacramentos.AsignacionParroquia', blank=True)),
                ('user', models.ForeignKey(related_name=b'usuario', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ['user__last_name', 'user__first_name'],
                'get_latest_by': 'created',
                'verbose_name': 'Perfil',
                'verbose_name_plural': 'Perfiles',
                'permissions': (('add_secretaria', 'Puede crear secretarias'), ('change_secretaria', 'Puede actualizar secretarias'), ('delete_secretaria', 'Puede eliminar secretarias'), ('add_feligres', 'Puede crear feligreses'), ('change_feligres', 'Puede actualizar feligreses'), ('delete_feligres', 'Puede eliminar feligreses'), ('add_sacerdote', 'Puede crear sacerdotes'), ('change_sacerdote', 'Puede actualizar sacerdotes'), ('delete_sacerdote', 'Puede eliminar sacerdotes'), ('add_administrador', 'Puede crear administradores'), ('change_administrador', 'Puede actualizar administradores'), ('delete_administrador', 'Puede eliminar administradores')),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PeriodoAsignacionParroquia',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('es_activo', models.BooleanField(default=True, verbose_name=b'Est\xc3\xa1 activo?')),
                ('inicio', models.DateField(help_text=b'Ingrese la fecha de inicial de asignaci\xc3\xb3n Ej: dd/mm/aaaa')),
                ('fin', models.DateField(help_text=b'Ingrese la fecha final de asignaci\xc3\xb3n  Ej: dd/mm/aaaa', null=True, blank=True)),
                ('estado', models.BooleanField(help_text=b'Marque la casilla activo para indicar que el usuario puede acceder al sistema', verbose_name=b'Es administrador?')),
                ('asignacion', models.ForeignKey(related_name=b'periodos', to='sacramentos.AsignacionParroquia')),
            ],
            options={
                'ordering': ['estado', '-inicio'],
                'get_latest_by': 'created',
                'verbose_name': 'Periodo',
                'verbose_name_plural': 'Periodos',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Sacramento',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('es_activo', models.BooleanField(default=True, verbose_name=b'Est\xc3\xa1 activo?')),
                ('numero_acta', models.PositiveIntegerField(help_text=b'Ingrese el numero de acta ej:3,78')),
                ('pagina', models.PositiveIntegerField(help_text=b'Numero de pagina ej:1,3')),
                ('fecha_sacramento', models.DateField(help_text=b'Elija una fecha ej:dd/mm/aaaa')),
                ('lugar_sacramento', models.CharField(help_text=b'Ingrese el lugar del sacramento Ej: Loja,San Pedro', max_length=30, verbose_name='Lugar del Sacramento *')),
                ('padrino', models.CharField(help_text=b'Ingrese el nombre de padrino ej: Jose Rivera', max_length=50, null=True, blank=True)),
                ('madrina', models.CharField(help_text=b'Ingrese el nombre de madrina ej: Luisa Mera', max_length=50, null=True, blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Matrimonio',
            fields=[
                ('sacramento_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='sacramentos.Sacramento')),
                ('testigo_novio', models.CharField(help_text=b'Nombre de testigo ej: Pablo Robles', max_length=70, verbose_name='Testigo novio *')),
                ('testigo_novia', models.CharField(help_text=b'Nombre de testiga ej:Fernanda Pincay', max_length=70, verbose_name='Testigo novia *')),
                ('vigente', models.BooleanField()),
                ('tipo_matrimonio', models.CharField(default=b'Catolico', help_text=b'Elija tipo de matrimonio Ej: Catolico o Mixto', max_length=100, verbose_name='Tipo Matrimonio *', choices=[(b'', b'-- Seleccione --'), (b'Catolico', b'Catolico'), (b'Mixto', b'Mixto')])),
                ('novia', models.ForeignKey(related_name=b'matrimonios_mujer', to='sacramentos.PerfilUsuario', help_text=b'Seleccione una novia')),
                ('novio', models.ForeignKey(related_name=b'matrimonios_hombre', to='sacramentos.PerfilUsuario', help_text=b'Seleccione un novio')),
            ],
            options={
                'ordering': ['-vigente', 'novio__user__last_name', 'novio__user__first_name', 'novia__user__last_name', 'novia__user__first_name', 'fecha_sacramento', 'lugar_sacramento'],
                'get_latest_by': 'created',
                'verbose_name': 'Matrimonio',
                'verbose_name_plural': 'Matrimonios',
            },
            bases=('sacramentos.sacramento',),
        ),
        migrations.CreateModel(
            name='Eucaristia',
            fields=[
                ('sacramento_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='sacramentos.Sacramento')),
                ('feligres', models.OneToOneField(related_name=b'primera_comunion', to='sacramentos.PerfilUsuario', help_text=b'Seleccione un feligres')),
            ],
            options={
                'ordering': ['feligres__user__last_name', 'feligres__user__first_name', 'fecha_sacramento', 'lugar_sacramento'],
                'get_latest_by': 'created',
                'verbose_name': 'Primera Comuni\xf3n',
                'verbose_name_plural': 'Primera Comuni\xf3n',
            },
            bases=('sacramentos.sacramento',),
        ),
        migrations.CreateModel(
            name='Confirmacion',
            fields=[
                ('sacramento_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='sacramentos.Sacramento')),
                ('confirmado', models.OneToOneField(related_name=b'confirmacion', to='sacramentos.PerfilUsuario', help_text=b'Seleccione un feligres')),
            ],
            options={
                'abstract': False,
            },
            bases=('sacramentos.sacramento',),
        ),
        migrations.CreateModel(
            name='Bautismo',
            fields=[
                ('sacramento_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='sacramentos.Sacramento')),
                ('abuelo_paterno', models.CharField(help_text=b'Nombre de abuelo paterno ej: Jose Rivera', max_length=70, null=True, blank=True)),
                ('abuela_paterna', models.CharField(help_text=b'Nombre de abuela paterna ej: Mary Gonzalez', max_length=70, null=True, blank=True)),
                ('abuelo_materno', models.CharField(help_text=b'Nombre de abuelo materno ej: Jose Gonzalez', max_length=70, null=True, blank=True)),
                ('abuela_materna', models.CharField(help_text=b'Nombre de abuela materna ej: Gloria Correa', max_length=70, null=True, blank=True)),
                ('vecinos_paternos', models.CharField(help_text=b'Residencia de abuelos paternos ej: Catacocha', max_length=70, null=True, verbose_name='Residencia Abuelos Paternos', blank=True)),
                ('vecinos_maternos', models.CharField(help_text=b'Residencia de abuelos maternos ej: Malacatos', max_length=70, null=True, verbose_name='Residencia Abuelos Maternos', blank=True)),
                ('bautizado', models.OneToOneField(related_name=b'bautismo', to='sacramentos.PerfilUsuario', help_text=b'Seleccione un feligres')),
            ],
            options={
                'ordering': ['bautizado__user__last_name', 'bautizado__user__first_name', 'fecha_sacramento', 'lugar_sacramento'],
                'get_latest_by': 'created',
                'verbose_name': 'Bautismo',
                'verbose_name_plural': 'Bautismos',
            },
            bases=('sacramentos.sacramento',),
        ),
        migrations.AddField(
            model_name='sacramento',
            name='celebrante',
            field=models.ForeignKey(related_name=b'sacramento_sacerdote', verbose_name=b'Celebrante *', to='sacramentos.PerfilUsuario', help_text=b'Escoja el celebrante. Ej: Segundo Pardo Rojas'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='sacramento',
            name='iglesia',
            field=models.ForeignKey(verbose_name='Iglesia *', to='sacramentos.Iglesia', help_text=b'Ingrese el nombre de la iglesia Ej: La Catedral'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='sacramento',
            name='libro',
            field=models.ForeignKey(related_name=b'sacramento_libro', verbose_name=b'Libro *', to='sacramentos.Libro', help_text=b'Seleccione un libro'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='sacramento',
            name='parroquia',
            field=models.ForeignKey(related_name=b'sacramento_parroquia', to='sacramentos.Parroquia'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='parametrizaparroquia',
            name='parroquia',
            field=models.OneToOneField(to='sacramentos.Parroquia'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='notamarginal',
            name='bautismo',
            field=models.ForeignKey(related_name=b'bautismo', blank=True, to='sacramentos.Bautismo', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='notamarginal',
            name='matrimonio',
            field=models.ForeignKey(related_name=b'matrimonio', blank=True, to='sacramentos.Matrimonio', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='libro',
            name='parroquia',
            field=models.ForeignKey(related_name=b'libros', to='sacramentos.Parroquia', help_text=b'Seleccione una parroquia'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='intenciones',
            name='parroquia',
            field=models.ForeignKey(to='sacramentos.Parroquia'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iglesia',
            name='parroquia',
            field=models.ForeignKey(related_name=b'iglesias', to='sacramentos.Parroquia'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='asignacionparroquia',
            name='parroquia',
            field=models.ForeignKey(to='sacramentos.Parroquia'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='asignacionparroquia',
            name='persona',
            field=models.ForeignKey(verbose_name='Sacerdote *', to='sacramentos.PerfilUsuario'),
            preserve_default=True,
        ),
    ]
